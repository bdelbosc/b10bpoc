defaultGraphParams:
    from: -1hours
    height: 400
    until: now
    width: 500
graphSize:
    height: 400
    width: 500
graphs:
-
    -   - alias(secondYAxis(sumSeries(servers.nuxeo*.loadavg.processes_running)),"process
            running")
        - aliasByNode(servers.nuxeo*.loadavg.01,1)
    -   colorList: gray,blue,green,red,purple,brown,yellow,aqua,darkgrey,magenta,pink,gold,rose
        from: -1hours
        lineMode: connected
        target:
        - alias(secondYAxis(sumSeries(servers.nuxeo*.loadavg.processes_running)),"process
            running")
        - aliasByNode(servers.nuxeo*.loadavg.01,1)
        title: sys/Load1min Nuxeo nodes
        until: now
        vtitle: load
        vtitleRight: process
    - /render?width=500&from=-1hours&until=now&height=400&colorList=gray%2Cblue%2Cgreen%2Cred%2Cpurple%2Cbrown%2Cyellow%2Caqua%2Cdarkgrey%2Cmagenta%2Cpink%2Cgold%2Crose&vtitle=load&title=sys%2FLoad1min%20Nuxeo%20nodes&target=alias(secondYAxis(sumSeries(servers.nuxeo*.loadavg.processes_running))%2C%22process%20running%22)&target=aliasByNode(servers.nuxeo*.loadavg.01%2C1)&lineMode=connected&vtitleRight=process&_uniq=0.17637656164159277
-
    -   - alias(secondYAxis(sumSeries(servers.mongo*.loadavg.processes_running)),"process
            running")
        - aliasByNode(servers.mongo*.loadavg.01,1)
    -   colorList: gray,blue,green,red,purple,brown,yellow,aqua,darkgrey,magenta,pink,gold,rose
        from: -1hours
        lineMode: connected
        target:
        - alias(secondYAxis(sumSeries(servers.mongo*.loadavg.processes_running)),"process
            running")
        - aliasByNode(servers.mongo*.loadavg.01,1)
        title: sys/Load1min MongoDB nodes
        until: now
        vtitle: load
        vtitleRight: process
    - /render?width=500&from=-1hours&until=now&height=400&colorList=gray%2Cblue%2Cgreen%2Cred%2Cpurple%2Cbrown%2Cyellow%2Caqua%2Cdarkgrey%2Cmagenta%2Cpink%2Cgold%2Crose&vtitle=load&title=sys%2FLoad1min%20MongoDB%20nodes&target=alias(secondYAxis(sumSeries(servers.mongo*.loadavg.processes_running))%2C%22process%20running%22)&target=aliasByNode(servers.mongo*.loadavg.01%2C1)&lineMode=connected&vtitleRight=process&_uniq=0.19570856779479062
-
    -   - alias(secondYAxis(sumSeries(servers.elastic*.loadavg.processes_running)),"process
            running")
        - aliasByNode(servers.elastic*.loadavg.01,1)
    -   colorList: gray,blue,green,red,purple,brown,yellow,aqua,darkgrey,magenta,pink,gold,rose
        from: -1hours
        lineMode: connected
        target:
        - alias(secondYAxis(sumSeries(servers.elastic*.loadavg.processes_running)),"process
            running")
        - aliasByNode(servers.elastic*.loadavg.01,1)
        title: sys/Load1min Elasticsearch nodes
        until: now
        vtitle: load
        vtitleRight: process
    - /render?width=500&from=-1hours&until=now&height=400&colorList=gray%2Cblue%2Cgreen%2Cred%2Cpurple%2Cbrown%2Cyellow%2Caqua%2Cdarkgrey%2Cmagenta%2Cpink%2Cgold%2Crose&vtitle=load&title=sys%2FLoad1min%20Elasticsearch%20nodes&target=alias(secondYAxis(sumSeries(servers.elastic*.loadavg.processes_running))%2C%22process%20running%22)&target=aliasByNode(servers.elastic*.loadavg.01%2C1)&lineMode=connected&vtitleRight=process&_uniq=0.6059942331893259
-
    -   - alias(secondYAxis(sumSeries(servers.{gatling,monitor}*.loadavg.processes_running)),"process
            running")
        - aliasByNode(servers.{gatling,monitor}*.loadavg.01,1)
    -   colorList: gray,blue,green,red,purple,brown,yellow,aqua,darkgrey,magenta,pink,gold,rose
        from: -1hours
        lineMode: connected
        target:
        - alias(secondYAxis(sumSeries(servers.{gatling,monitor}*.loadavg.processes_running)),"process
            running")
        - aliasByNode(servers.{gatling,monitor}*.loadavg.01,1)
        title: sys/Load1min Others
        until: now
        vtitle: load
        vtitleRight: process
    - /render?width=500&from=-1hours&until=now&height=400&colorList=gray%2Cblue%2Cgreen%2Cred%2Cpurple%2Cbrown%2Cyellow%2Caqua%2Cdarkgrey%2Cmagenta%2Cpink%2Cgold%2Crose&vtitle=load&title=sys%2FLoad1min%20Others&target=alias(secondYAxis(sumSeries(servers.%7Bgatling%2Cmonitor%7D*.loadavg.processes_running))%2C%22process%20running%22)&target=aliasByNode(servers.%7Bgatling%2Cmonitor%7D*.loadavg.01%2C1)&lineMode=connected&vtitleRight=process&_uniq=0.9183217091491469
-
    -   - aliasByNode(servers.*.cpu.total.idle,1)
    -   from: -1hours
        lineMode: connected
        target:
        - aliasByNode(servers.*.cpu.total.idle,1)
        title: sys/CPU Idle
        until: now
        vtitle: '% Idle'
    - /render?width=500&from=-1hours&until=now&height=400&title=sys%2FCPU%20Idle&target=aliasByNode(servers.*.cpu.total.idle%2C1)&lineMode=connected&vtitle=%25%20Idle&_uniq=0.9437535063166099
-
    -   - aliasByNode(servers.*.cpu.total.user,1)
    -   from: -1hours
        lineMode: connected
        target:
        - aliasByNode(servers.*.cpu.total.user,1)
        title: sys/CPU User
        until: now
        vtitle: '% User'
    - /render?width=500&from=-1hours&until=now&height=400&title=sys%2FCPU%20User&target=aliasByNode(servers.*.cpu.total.user%2C1)&lineMode=connected&vtitle=%25%20User&_uniq=0.8737697281291855
-
    -   - aliasByNode(servers.*.cpu.total.iowait,1)
    -   from: -1hours
        lineMode: connected
        target:
        - aliasByNode(servers.*.cpu.total.iowait,1)
        title: sys/CPU IoWait
        until: now
        vtitle: '% iowait'
    - /render?width=500&from=-1hours&until=now&height=400&title=sys%2FCPU%20IoWait&target=aliasByNode(servers.*.cpu.total.iowait%2C1)&lineMode=connected&vtitle=%25%20iowait&_uniq=0.7088884415392465
-
    -   - aliasByNode(servers.*.cpu.total.system,1)
    -   from: -1hours
        lineMode: connected
        target:
        - aliasByNode(servers.*.cpu.total.system,1)
        title: sys/CPU System
        until: now
        vtitle: '% System'
    - /render?width=500&from=-1hours&until=now&height=400&title=sys%2FCPU%20System&target=aliasByNode(servers.*.cpu.total.system%2C1)&lineMode=connected&vtitle=%25%20System&_uniq=0.5710997245834699
-
    -   - alias(sumSeries(servers.mongo*.iostat.md0.util_percentage),"mongo")
        - alias(sumSeries(servers.elastic*.iostat.md0.util_percentage),"elastic")
        - alias(sumSeries(servers.nuxeo*.iostat.md0.util_percentage),"nuxeo")
        - alias(sumSeries(servers.{monitor|gatling}*.iostat.md0.util_percentage),"others")
    -   from: -1hours
        lineMode: connected
        target:
        - alias(sumSeries(servers.mongo*.iostat.md0.util_percentage),"mongo")
        - alias(sumSeries(servers.elastic*.iostat.md0.util_percentage),"elastic")
        - alias(sumSeries(servers.nuxeo*.iostat.md0.util_percentage),"nuxeo")
        - alias(sumSeries(servers.{monitor|gatling}*.iostat.md0.util_percentage),"others")
        title: sys/Disk Usage ssd
        until: now
        vtitle: '% usage'
    - /render?width=500&from=-1hours&until=now&height=400&title=sys%2FDisk%20Usage%20ssd&target=alias(sumSeries(servers.mongo*.iostat.md0.util_percentage)%2C%22mongo%22)&target=alias(sumSeries(servers.elastic*.iostat.md0.util_percentage)%2C%22elastic%22)&target=alias(sumSeries(servers.nuxeo*.iostat.md0.util_percentage)%2C%22nuxeo%22)&target=alias(sumSeries(servers.%7Bmonitor%7Cgatling%7D*.iostat.md0.util_percentage)%2C%22others%22)&lineMode=connected&vtitle=%25%20usage&_uniq=0.6150981879841569
-
    -   - alias(sumSeries(servers.mongo*.iostat.xvdf.util_percentage),"mongo")
        - alias(sumSeries(servers.elastic*.iostat.xvdf.util_percentage),"elastic")
        - alias(sumSeries(servers.nuxeo*.iostat.xvdf.util_percentage),"nuxeo")
        - alias(sumSeries(servers.{monitor|gatling}*.iostat.xvdf.util_percentage),"others")
    -   from: -1hours
        lineMode: connected
        target:
        - alias(sumSeries(servers.mongo*.iostat.xvdf.util_percentage),"mongo")
        - alias(sumSeries(servers.elastic*.iostat.xvdf.util_percentage),"elastic")
        - alias(sumSeries(servers.nuxeo*.iostat.xvdf.util_percentage),"nuxeo")
        - alias(sumSeries(servers.{monitor|gatling}*.iostat.xvdf.util_percentage),"others")
        title: sys/Disk Usage ebs
        until: now
        vtitle: '% usage'
    - /render?width=500&from=-1hours&until=now&height=400&title=sys%2FDisk%20Usage%20ebs&target=alias(sumSeries(servers.mongo*.iostat.xvdf.util_percentage)%2C%22mongo%22)&target=alias(sumSeries(servers.elastic*.iostat.xvdf.util_percentage)%2C%22elastic%22)&target=alias(sumSeries(servers.nuxeo*.iostat.xvdf.util_percentage)%2C%22nuxeo%22)&target=alias(sumSeries(servers.%7Bmonitor%7Cgatling%7D*.iostat.xvdf.util_percentage)%2C%22others%22)&lineMode=connected&vtitle=%25%20usage&_uniq=0.33557177140518746
-
    -   - alias(secondYAxis(sumSeries(servers.mongo*.memory.Dirty)),"dirty")
        - alias(sumSeries(servers.mongo*.memory.MemTotal),"total")
        - alias(sumSeries(servers.mongo*.memory.Buffers),"buffers")
        - alias(sumSeries(servers.mongo*.memory.Cached),"cached")
        - alias(sumSeries(servers.mongo*.memory.MemFree),"free")
    -   from: -1hours
        lineMode: connected
        target:
        - alias(secondYAxis(sumSeries(servers.mongo*.memory.Dirty)),"dirty")
        - alias(sumSeries(servers.mongo*.memory.MemTotal),"total")
        - alias(sumSeries(servers.mongo*.memory.Buffers),"buffers")
        - alias(sumSeries(servers.mongo*.memory.Cached),"cached")
        - alias(sumSeries(servers.mongo*.memory.MemFree),"free")
        title: sys/Memory MongoDB
        until: now
        vtitle: Bytes
        vtitleRight: Bytes
    - /render?width=500&from=-1hours&until=now&height=400&vtitle=Bytes&title=sys%2FMemory%20MongoDB&target=alias(secondYAxis(sumSeries(servers.mongo*.memory.Dirty))%2C%22dirty%22)&target=alias(sumSeries(servers.mongo*.memory.MemTotal)%2C%22total%22)&target=alias(sumSeries(servers.mongo*.memory.Buffers)%2C%22buffers%22)&target=alias(sumSeries(servers.mongo*.memory.Cached)%2C%22cached%22)&target=alias(sumSeries(servers.mongo*.memory.MemFree)%2C%22free%22)&lineMode=connected&vtitleRight=Bytes&_uniq=0.5453566786221152
-
    -   - alias(secondYAxis(sumSeries(servers.elastic*.memory.Dirty)),"dirty")
        - alias(sumSeries(servers.elastic*.memory.MemTotal),"total")
        - alias(sumSeries(servers.elastic*.memory.Buffers),"buffers")
        - alias(sumSeries(servers.elastic*.memory.Cached),"cached")
        - alias(sumSeries(servers.elastic*.memory.MemFree),"free")
    -   from: -1hours
        lineMode: connected
        target:
        - alias(secondYAxis(sumSeries(servers.elastic*.memory.Dirty)),"dirty")
        - alias(sumSeries(servers.elastic*.memory.MemTotal),"total")
        - alias(sumSeries(servers.elastic*.memory.Buffers),"buffers")
        - alias(sumSeries(servers.elastic*.memory.Cached),"cached")
        - alias(sumSeries(servers.elastic*.memory.MemFree),"free")
        title: sys/Memory Elastic
        until: now
        vtitle: '%'
        vtitleRight: Bytes
    - /render?width=500&from=-1hours&until=now&height=400&vtitle=%25&title=sys%2FMemory%20Elastic&target=alias(secondYAxis(sumSeries(servers.elastic*.memory.Dirty))%2C%22dirty%22)&target=alias(sumSeries(servers.elastic*.memory.MemTotal)%2C%22total%22)&target=alias(sumSeries(servers.elastic*.memory.Buffers)%2C%22buffers%22)&target=alias(sumSeries(servers.elastic*.memory.Cached)%2C%22cached%22)&target=alias(sumSeries(servers.elastic*.memory.MemFree)%2C%22free%22)&lineMode=connected&vtitleRight=Bytes&_uniq=0.26166459158713495
-
    -   - aliasByNode(servers.monitor1.elasticsearch.*.process.cpu.percent,1)
        - aliasByNode(secondYAxis(servers.monitor1.elasticsearch.*.indices._all.datastore.size),1)
    -   from: -1hours
        lineMode: connected
        target:
        - aliasByNode(servers.monitor1.elasticsearch.*.process.cpu.percent,1)
        - aliasByNode(secondYAxis(servers.monitor1.elasticsearch.*.indices._all.datastore.size),1)
        title: es/CPU and size
        until: now
        vtitle: '%'
        vtitleRight: Bytes
        yMaxLeft: '100'
        yMinLeft: '0'
    - /render?width=500&from=-1hours&until=now&height=400&vtitle=%25&yMinLeft=0&title=es%2FCPU%20and%20size&yMaxLeft=100&target=aliasByNode(servers.monitor1.elasticsearch.*.process.cpu.percent%2C1)&target=aliasByNode(secondYAxis(servers.monitor1.elasticsearch.*.indices._all.datastore.size)%2C1)&vtitleRight=Bytes&lineMode=connected&_uniq=0.8718625147877653
-
    -   - alias(maxSeries(servers.monitor1.elasticsearch.*.indices._all.docs.count),"total")
        - alias(maxSeries(servers.monitor1.elasticsearch.*.indices.nuxeo.docs.count),"docs")
        - alias(maxSeries(servers.monitor1.elasticsearch.*.indices.nuxeo-audit.docs.count),"audit")
        - alias(maxSeries(servers.monitor1.elasticsearch.*._all.docs.count),"total")
        - alias(maxSeries(servers.monitor1.elasticsearch.*._all.docs.deleted),"deleted")
    -   from: -1hours
        lineMode: connected
        target:
        - alias(maxSeries(servers.monitor1.elasticsearch.*.indices._all.docs.count),"total")
        - alias(maxSeries(servers.monitor1.elasticsearch.*.indices.nuxeo.docs.count),"docs")
        - alias(maxSeries(servers.monitor1.elasticsearch.*.indices.nuxeo-audit.docs.count),"audit")
        - alias(maxSeries(servers.monitor1.elasticsearch.*._all.docs.count),"total")
        - alias(maxSeries(servers.monitor1.elasticsearch.*._all.docs.deleted),"deleted")
        title: es/docs
        until: now
        vtitle: docs
    - /render?width=500&from=-1hours&until=now&height=400&title=es%2Fdocs&target=alias(maxSeries(servers.monitor1.elasticsearch.*.indices._all.docs.count)%2C%22total%22)&target=alias(maxSeries(servers.monitor1.elasticsearch.*.indices.nuxeo.docs.count)%2C%22docs%22)&target=alias(maxSeries(servers.monitor1.elasticsearch.*.indices.nuxeo-audit.docs.count)%2C%22audit%22)&target=alias(maxSeries(servers.monitor1.elasticsearch.*._all.docs.count)%2C%22total%22)&target=alias(maxSeries(servers.monitor1.elasticsearch.*._all.docs.deleted)%2C%22deleted%22)&vtitle=docs&lineMode=connected&_uniq=0.9192577658595295
-
    -   - alias(sumSeries(servers.monitor1.mongo.*.opcounters.insert),"insert")
        - alias(sumSeries(servers.monitor1.mongo.*.opcounters.update),"update")
        - alias(sumSeries(servers.monitor1.mongo.*.opcounters.delete),"delete")
        - alias(sumSeries(servers.monitor1.mongo.*.opcounters.query),"query")
        - alias(sumSeries(servers.monitor1.mongo.*.opcounters.getmore),"getmore")
        - alias(secondYAxis(sumSeries(servers.monitor1.mongo.*.connections.current)),"connections")
    -   from: -1hours
        lineMode: connected
        target:
        - alias(sumSeries(servers.monitor1.mongo.*.opcounters.insert),"insert")
        - alias(sumSeries(servers.monitor1.mongo.*.opcounters.update),"update")
        - alias(sumSeries(servers.monitor1.mongo.*.opcounters.delete),"delete")
        - alias(sumSeries(servers.monitor1.mongo.*.opcounters.query),"query")
        - alias(sumSeries(servers.monitor1.mongo.*.opcounters.getmore),"getmore")
        - alias(secondYAxis(sumSeries(servers.monitor1.mongo.*.connections.current)),"connections")
        title: db/MongoDB throughput
        until: now
        vtitle: op/s
        yMinRight: '0'
    - /render?width=500&from=-1hours&until=now&height=400&title=db%2FMongoDB%20throughput&yMinRight=0&target=alias(sumSeries(servers.monitor1.mongo.*.opcounters.insert)%2C%22insert%22)&target=alias(sumSeries(servers.monitor1.mongo.*.opcounters.update)%2C%22update%22)&target=alias(sumSeries(servers.monitor1.mongo.*.opcounters.delete)%2C%22delete%22)&target=alias(sumSeries(servers.monitor1.mongo.*.opcounters.query)%2C%22query%22)&target=alias(sumSeries(servers.monitor1.mongo.*.opcounters.getmore)%2C%22getmore%22)&target=alias(secondYAxis(sumSeries(servers.monitor1.mongo.*.connections.current))%2C%22connections%22)&lineMode=connected&vtitle=op%2Fs&_uniq=0.9143538777715102
-
    -   - alias(sumSeries(servers.monitor1.mongo.*.databases.bench.dataSize),"data")
        - alias(sumSeries(servers.monitor1.mongo.*.databases.bench.indexSize),"index")
        - alias(sumSeries(servers.monitor1.mongo.*.databases.bench.storageSize),"storage")
        - alias(secondYAxis(sumSeries(servers.monitor1.mongo.*.connections.current)),"connections")
        - alias(secondYAxis(sumSeries(servers.monitor1.mongo.*.databases.bench.indexes)),"nb
            indexes")
    -   from: -1hours
        lineMode: connected
        target:
        - alias(sumSeries(servers.monitor1.mongo.*.databases.bench.dataSize),"data")
        - alias(sumSeries(servers.monitor1.mongo.*.databases.bench.indexSize),"index")
        - alias(sumSeries(servers.monitor1.mongo.*.databases.bench.storageSize),"storage")
        - alias(secondYAxis(sumSeries(servers.monitor1.mongo.*.connections.current)),"connections")
        - alias(secondYAxis(sumSeries(servers.monitor1.mongo.*.databases.bench.indexes)),"nb
            indexes")
        title: db/MongoDB size
        until: now
        vtitle: bytes
        yMinRight: '0'
    - /render?width=500&from=-1hours&until=now&height=400&title=db%2FMongoDB%20size&yMinRight=0&target=alias(sumSeries(servers.monitor1.mongo.*.databases.bench.dataSize)%2C%22data%22)&target=alias(sumSeries(servers.monitor1.mongo.*.databases.bench.indexSize)%2C%22index%22)&target=alias(sumSeries(servers.monitor1.mongo.*.databases.bench.storageSize)%2C%22storage%22)&target=alias(secondYAxis(sumSeries(servers.monitor1.mongo.*.connections.current))%2C%22connections%22)&target=alias(secondYAxis(sumSeries(servers.monitor1.mongo.*.databases.bench.indexes))%2C%22nb%20indexes%22)&lineMode=connected&vtitle=bytes&_uniq=0.9440925016024992
-
    -   - alias(sumSeries(servers.monitor1.mongo.*.databases.bench.objects),"docs")
        - alias(secondYAxis(sumSeries(servers.monitor1.mongo.*.databases.bench.avgObjSize)),"avg
            doc size")
    -   from: -1hours
        lineMode: connected
        target:
        - alias(sumSeries(servers.monitor1.mongo.*.databases.bench.objects),"docs")
        - alias(secondYAxis(sumSeries(servers.monitor1.mongo.*.databases.bench.avgObjSize)),"avg
            doc size")
        title: db/MongoDB documents size
        until: now
        yMinRight: '0'
    - /render?width=500&from=-1hours&until=now&height=400&title=db%2FMongoDB%20documents%20size&yMinRight=0&target=alias(sumSeries(servers.monitor1.mongo.*.databases.bench.objects)%2C%22docs%22)&target=alias(secondYAxis(sumSeries(servers.monitor1.mongo.*.databases.bench.avgObjSize))%2C%22avg%20doc%20size%22)&lineMode=connected&_uniq=0.7774309783335168
-
    -   - alias(sumSeries(servers.monitor1.mongo.*.tcmalloc.generic.heap_size),"heap_size")
        - alias(sumSeries(servers.monitor1.mongo.*.tcmalloc.generic.current_allocated_bytes),"allocated")
    -   from: -1hours
        lineMode: connected
        target:
        - alias(sumSeries(servers.monitor1.mongo.*.tcmalloc.generic.heap_size),"heap_size")
        - alias(sumSeries(servers.monitor1.mongo.*.tcmalloc.generic.current_allocated_bytes),"allocated")
        title: db/MongoDB memory tcmalloc
        until: now
        yMinRight: '0'
    - /render?width=500&from=-1hours&until=now&height=400&title=db%2FMongoDB%20memory%20tcmalloc&yMinRight=0&target=alias(sumSeries(servers.monitor1.mongo.*.tcmalloc.generic.heap_size)%2C%22heap_size%22)&target=alias(sumSeries(servers.monitor1.mongo.*.tcmalloc.generic.current_allocated_bytes)%2C%22allocated%22)&lineMode=connected&_uniq=0.7461205767272976
-
    -   - alias(secondYAxis(sumSeries(servers.*.nuxeo.jvm.files)),"fd_usage")
        - alias(sumSeries(servers.*.nuxeo.jvm.threads.count),"thread_count")
        - alias(sumSeries(servers.*.nuxeo.jvm.threads.daemon.count),"daemond")
    -   colorList: darkgray,blue,green
        from: -1hours
        target:
        - alias(secondYAxis(sumSeries(servers.*.nuxeo.jvm.files)),"fd_usage")
        - alias(sumSeries(servers.*.nuxeo.jvm.threads.count),"thread_count")
        - alias(sumSeries(servers.*.nuxeo.jvm.threads.daemon.count),"daemond")
        title: jvm/Threads all nodes
        until: now
    - /render?width=500&from=-1hours&until=now&height=400&title=jvm%2FThreads%20all%20nodes&target=alias(secondYAxis(sumSeries(servers.*.nuxeo.jvm.files))%2C%22fd_usage%22)&target=alias(sumSeries(servers.*.nuxeo.jvm.threads.count)%2C%22thread_count%22)&target=alias(sumSeries(servers.*.nuxeo.jvm.threads.daemon.count)%2C%22daemond%22)&colorList=darkgray%2Cblue%2Cgreen&_uniq=0.7453185890426104
-
    -   - alias(sumSeries(servers.*.nuxeo.jvm.threads.runnable.count),"runnable")
        - alias(sumSeries(servers.*.nuxeo.jvm.threads.new.count),"new")
        - alias(sumSeries(servers.*.nuxeo.jvm.threads.blocked.count),"blocked")
        - alias(sumSeries(servers.*.nuxeo.jvm.threads.waiting.count),"waiting")
        - alias(sumSeries(servers.*.nuxeo.jvm.threads.timed_waiting.count),"timed_waiting")
        - alias(sumSeries(servers.*.nuxeo.jvm.threads.terminated.count),"terminated")
    -   areaMode: stacked
        colorList: green,blue,red,orange,yellow,purple
        from: -1hours
        target:
        - alias(sumSeries(servers.*.nuxeo.jvm.threads.runnable.count),"runnable")
        - alias(sumSeries(servers.*.nuxeo.jvm.threads.new.count),"new")
        - alias(sumSeries(servers.*.nuxeo.jvm.threads.blocked.count),"blocked")
        - alias(sumSeries(servers.*.nuxeo.jvm.threads.waiting.count),"waiting")
        - alias(sumSeries(servers.*.nuxeo.jvm.threads.timed_waiting.count),"timed_waiting")
        - alias(sumSeries(servers.*.nuxeo.jvm.threads.terminated.count),"terminated")
        title: jvm/Thread state all nodes
        until: now
    - /render?width=500&from=-1hours&until=now&height=400&title=jvm%2FThread%20state%20all%20nodes&target=alias(sumSeries(servers.*.nuxeo.jvm.threads.runnable.count)%2C%22runnable%22)&target=alias(sumSeries(servers.*.nuxeo.jvm.threads.new.count)%2C%22new%22)&target=alias(sumSeries(servers.*.nuxeo.jvm.threads.blocked.count)%2C%22blocked%22)&target=alias(sumSeries(servers.*.nuxeo.jvm.threads.waiting.count)%2C%22waiting%22)&target=alias(sumSeries(servers.*.nuxeo.jvm.threads.timed_waiting.count)%2C%22timed_waiting%22)&target=alias(sumSeries(servers.*.nuxeo.jvm.threads.terminated.count)%2C%22terminated%22)&colorList=green%2Cblue%2Cred%2Corange%2Cyellow%2Cpurple&areaMode=stacked&_uniq=0.9555174303425505
-
    -   - aliasByNode(servers.*.nuxeo.jvm.memory.heap.used,1,6)
        - aliasByNode(servers.*.nuxeo.jvm.memory.heap.max,1,6)
    -   from: -1hours
        target:
        - aliasByNode(servers.*.nuxeo.jvm.memory.heap.used,1,6)
        - aliasByNode(servers.*.nuxeo.jvm.memory.heap.max,1,6)
        title: jvm/Heap used
        until: now
        vtitle: size
    - /render?width=500&from=-1hours&until=now&height=400&title=jvm%2FHeap%20used&target=aliasByNode(servers.*.nuxeo.jvm.memory.heap.used%2C1%2C6)&target=aliasByNode(servers.*.nuxeo.jvm.memory.heap.max%2C1%2C6)&vtitle=size&_uniq=0.8104218317381963
-
    -   - alias(asPercent(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.jvm.garbage.PS-Scavenge.time)),1),2000),"minor")
        - alias(asPercent(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.jvm.garbage.PS-MarkSweep.time)),1),2000),"major")
    -   areaMode: first
        colorList: orange,red
        from: -1hours
        lineMode: staircase
        target:
        - alias(asPercent(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.jvm.garbage.PS-Scavenge.time)),1),2000),"minor")
        - alias(asPercent(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.jvm.garbage.PS-MarkSweep.time)),1),2000),"major")
        title: jvm/GC
        until: now
        vtitle: '%'
    - /render?width=500&from=-1hours&until=now&height=400&title=jvm%2FGC&target=alias(asPercent(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.jvm.garbage.PS-Scavenge.time))%2C1)%2C2000)%2C%22minor%22)&target=alias(asPercent(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.jvm.garbage.PS-MarkSweep.time))%2C1)%2C2000)%2C%22major%22)&lineMode=staircase&vtitle=%25&areaMode=first&colorList=orange%2Cred&_uniq=0.19146143666181015
-
    -   - alias(sumSeries(servers.*.nuxeo.tomcat.processingTime),"processingTime")
        - alias(secondYAxis(sumSeries(servers.*.nuxeo.tomcat.errorCount)),"requests
            in error")
    -   colorList: green,red,yellow
        from: -1hours
        target:
        - alias(sumSeries(servers.*.nuxeo.tomcat.processingTime),"processingTime")
        - alias(secondYAxis(sumSeries(servers.*.nuxeo.tomcat.errorCount)),"requests
            in error")
        title: tcat/Processing time and errors all nodes
        until: now
    - /render?width=500&from=-1hours&until=now&height=400&title=tcat%2FProcessing%20time%20and%20errors%20all%20nodes&target=alias(sumSeries(servers.*.nuxeo.tomcat.processingTime)%2C%22processingTime%22)&target=alias(secondYAxis(sumSeries(servers.*.nuxeo.tomcat.errorCount))%2C%22requests%20in%20error%22)&colorList=green%2Cred%2Cyellow&_uniq=0.4430601865021989
-
    -   - alias(sumSeries(servers.*.nuxeo.tomcat.currentThreadBusy),"threads busy")
        - alias(sumSeries(servers.*.nuxeo.tomcat.currentThreadCount),"threads")
        - alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.tomcat.requestCount)),1),"requests/s")
        - alias(secondYAxis(sumSeries(servers.*.nuxeo.tomcat.activeSessions)),"activeSessions")
    -   from: -1hours
        target:
        - alias(sumSeries(servers.*.nuxeo.tomcat.currentThreadBusy),"threads busy")
        - alias(sumSeries(servers.*.nuxeo.tomcat.currentThreadCount),"threads")
        - alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.tomcat.requestCount)),1),"requests/s")
        - alias(secondYAxis(sumSeries(servers.*.nuxeo.tomcat.activeSessions)),"activeSessions")
        title: tcat/Throughtput Threads and sessions
        until: now
    - /render?width=500&from=-1hours&until=now&height=400&title=tcat%2FThroughtput%20Threads%20and%20sessions&target=alias(sumSeries(servers.*.nuxeo.tomcat.currentThreadBusy)%2C%22threads%20busy%22)&target=alias(sumSeries(servers.*.nuxeo.tomcat.currentThreadCount)%2C%22threads%22)&target=alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.tomcat.requestCount))%2C1)%2C%22requests%2Fs%22)&target=alias(secondYAxis(sumSeries(servers.*.nuxeo.tomcat.activeSessions))%2C%22activeSessions%22)&_uniq=0.18826632146107125
-
    -   - alias(sumSeries(servers.*.nuxeo.nuxeo.repositories.jdbc.*.connections.count),"total
            connection")
        - alias(diffSeries(sumSeries(servers.*.nuxeo.nuxeo.repositories.jdbc.*.connections.count),sumSeries(servers.*.nuxeo.nuxeo.repositories.jdbc.*.connections.idle)),"active")
    -   from: -1hours
        target:
        - alias(sumSeries(servers.*.nuxeo.nuxeo.repositories.jdbc.*.connections.count),"total
            connection")
        - alias(diffSeries(sumSeries(servers.*.nuxeo.nuxeo.repositories.jdbc.*.connections.count),sumSeries(servers.*.nuxeo.nuxeo.repositories.jdbc.*.connections.idle)),"active")
        title: nx/Repositories JDBC connections pool all nodes
        until: now
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FRepositories%20JDBC%20connections%20pool%20all%20nodes&target=alias(sumSeries(servers.*.nuxeo.nuxeo.repositories.jdbc.*.connections.count)%2C%22total%20connection%22)&target=alias(diffSeries(sumSeries(servers.*.nuxeo.nuxeo.repositories.jdbc.*.connections.count)%2CsumSeries(servers.*.nuxeo.nuxeo.repositories.jdbc.*.connections.idle))%2C%22active%22)&_uniq=0.9086080009839337
-
    -   - alias(sumSeries(servers.*.nuxeo.nuxeo.repositories.sessions),"sessions")
        - alias(sumSeries(servers.*.nuxeo.nuxeo.repositories.repository.*.connections.count),"total
            connections")
        - alias(diffSeries(sumSeries(servers.*.nuxeo.nuxeo.repositories.repository.*.connections.count),sumSeries(servers.*.nuxeo.nuxeo.repositories.repository.*.connections.idle)),"active")
    -   from: -1hours
        target:
        - alias(sumSeries(servers.*.nuxeo.nuxeo.repositories.sessions),"sessions")
        - alias(sumSeries(servers.*.nuxeo.nuxeo.repositories.repository.*.connections.count),"total
            connections")
        - alias(diffSeries(sumSeries(servers.*.nuxeo.nuxeo.repositories.repository.*.connections.count),sumSeries(servers.*.nuxeo.nuxeo.repositories.repository.*.connections.idle)),"active")
        title: nx/Repositories sessions
        until: now
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FRepositories%20sessions&target=alias(sumSeries(servers.*.nuxeo.nuxeo.repositories.sessions)%2C%22sessions%22)&target=alias(sumSeries(servers.*.nuxeo.nuxeo.repositories.repository.*.connections.count)%2C%22total%20connections%22)&target=alias(diffSeries(sumSeries(servers.*.nuxeo.nuxeo.repositories.repository.*.connections.count)%2CsumSeries(servers.*.nuxeo.nuxeo.repositories.repository.*.connections.idle))%2C%22active%22)&_uniq=0.06017832282496638
-
    -   - alias(sumSeries(servers.*.nuxeo.nuxeo.directories.*.sessions.max.count),"count")
    -   from: -1hours
        target:
        - alias(sumSeries(servers.*.nuxeo.nuxeo.directories.*.sessions.max.count),"count")
        title: nx/Directories max sessions for all directories and nodes
        until: now
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FDirectories%20max%20sessions%20for%20all%20directories%20and%20nodes&target=alias(sumSeries(servers.*.nuxeo.nuxeo.directories.*.sessions.max.count)%2C%22count%22)&_uniq=0.9336943203795556
-
    -   - alias(sumSeries(servers.*.nuxeo.nuxeo.directories.*.sessions.active.count),"total
            active sessions")
        - alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.directories.*.cache.size.count)),"cache
            size"),
        - alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.directories.*.cache.max.count)),"max
            cache size")
    -   from: -1hours
        target:
        - alias(sumSeries(servers.*.nuxeo.nuxeo.directories.*.sessions.active.count),"total
            active sessions")
        - alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.directories.*.cache.size.count)),"cache
            size"),
        - alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.directories.*.cache.max.count)),"max
            cache size")
        title: nx/Directories sessions and cache size
        until: now
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FDirectories%20sessions%20and%20cache%20size&target=alias(sumSeries(servers.*.nuxeo.nuxeo.directories.*.sessions.active.count)%2C%22total%20active%20sessions%22)&target=alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.directories.*.cache.size.count))%2C%22cache%20size%22)%2C&target=alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.directories.*.cache.max.count))%2C%22max%20cache%20size%22)&_uniq=0.7405021130527236
-
    -   - alias(sumSeries(servers.*.nuxeo.nuxeo.web.authentication.requests.count.m1_rate),"1minRate")
        - alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.web.authentication.requests.count.mean)),"mean")
        - alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.web.authentication.requests.count.p95)),"95perc")
    -   colorList: blue,orange,red
        from: -1hours
        target:
        - alias(sumSeries(servers.*.nuxeo.nuxeo.web.authentication.requests.count.m1_rate),"1minRate")
        - alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.web.authentication.requests.count.mean)),"mean")
        - alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.web.authentication.requests.count.p95)),"95perc")
        title: nx/Requests all nodes
        until: now
        vtitle: Req/s
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FRequests%20all%20nodes&target=alias(sumSeries(servers.*.nuxeo.nuxeo.web.authentication.requests.count.m1_rate)%2C%221minRate%22)&target=alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.web.authentication.requests.count.mean))%2C%22mean%22)&target=alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.web.authentication.requests.count.p95))%2C%2295perc%22)&colorList=blue%2Corange%2Cred&vtitle=Req%2Fs&_uniq=0.6372727495937852
-
    -   - alias(sumSeries(servers.*.nuxeo.nuxeo.web.authentication.logged-users.count),"logged")
        - alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.web.authentication.requests.concurrent.count.count)),"concurrent
            request")
        - alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.web.authentication.requests.concurrent.max.count)),"max
            concurrent")
    -   from: -1hours
        target:
        - alias(sumSeries(servers.*.nuxeo.nuxeo.web.authentication.logged-users.count),"logged")
        - alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.web.authentication.requests.concurrent.count.count)),"concurrent
            request")
        - alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.web.authentication.requests.concurrent.max.count)),"max
            concurrent")
        title: nx/Requests and logged all nodes
        until: now
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FRequests%20and%20logged%20all%20nodes&target=alias(sumSeries(servers.*.nuxeo.nuxeo.web.authentication.logged-users.count)%2C%22logged%22)&target=alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.web.authentication.requests.concurrent.count.count))%2C%22concurrent%20request%22)&target=alias(secondYAxis(sumSeries(servers.*.nuxeo.nuxeo.web.authentication.requests.concurrent.max.count))%2C%22max%20concurrent%22)&_uniq=0.8544956104354291
-
    -   - alias(sumSeries(servers.*.nuxeo.nuxeo.transactions.duration.m1_rate),"1minRate")
        - alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.transactions.duration.mean)),"mean")
        - alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.transactions.duration.p95)),"95perc")
    -   colorList: blue,orange,red
        from: -1hours
        lineMode: connected
        target:
        - alias(sumSeries(servers.*.nuxeo.nuxeo.transactions.duration.m1_rate),"1minRate")
        - alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.transactions.duration.mean)),"mean")
        - alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.transactions.duration.p95)),"95perc")
        title: nx/Transactions
        until: now
        vtitle: Tx/s
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FTransactions&target=alias(sumSeries(servers.*.nuxeo.nuxeo.transactions.duration.m1_rate)%2C%221minRate%22)&target=alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.transactions.duration.mean))%2C%22mean%22)&target=alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.transactions.duration.p95))%2C%2295perc%22)&colorList=blue%2Corange%2Cred&lineMode=connected&vtitle=Tx%2Fs&_uniq=0.38934235881056556
-
    -   - alias(drawAsInfinite(derivative(sumSeries(servers.*.nuxeo.nuxeo.transactions.rollbacks.count))),"rollback")
        - alias(sumSeries(servers.*.nuxeo.nuxeo.transactions.concurrents.count.count),"concurrent
            tx")
        - alias(sumSeries(servers.*.nuxeo.nuxeo.transactions.concurrents.max.count),"max
            concurrent tx")
    -   colorList: red,blue,orange
        from: -1hours
        target:
        - alias(drawAsInfinite(derivative(sumSeries(servers.*.nuxeo.nuxeo.transactions.rollbacks.count))),"rollback")
        - alias(sumSeries(servers.*.nuxeo.nuxeo.transactions.concurrents.count.count),"concurrent
            tx")
        - alias(sumSeries(servers.*.nuxeo.nuxeo.transactions.concurrents.max.count),"max
            concurrent tx")
        title: nx/Transactions rollback all nodes
        until: now
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FTransactions%20rollback%20all%20nodes&target=alias(drawAsInfinite(derivative(sumSeries(servers.*.nuxeo.nuxeo.transactions.rollbacks.count)))%2C%22rollback%22)&target=alias(sumSeries(servers.*.nuxeo.nuxeo.transactions.concurrents.count.count)%2C%22concurrent%20tx%22)&target=alias(sumSeries(servers.*.nuxeo.nuxeo.transactions.concurrents.max.count)%2C%22max%20concurrent%20tx%22)&colorList=red%2Cblue%2Corange&_uniq=0.002092833874312805
-
    -   - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.org.apache.log4j.Appender.warn.count),1),"warnings")
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.org.apache.log4j.Appender.error.count),1),"errors")
        - alias(drawAsInfinite(absolute(derivative(transformNull(servers.*.nuxeo.nuxeo.instance-up.count,0)))),"start
            or stop")
    -   colorList: orange,red,green
        from: -1hours
        target:
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.org.apache.log4j.Appender.warn.count),1),"warnings")
        - alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.org.apache.log4j.Appender.error.count),1),"errors")
        - alias(drawAsInfinite(absolute(derivative(transformNull(servers.*.nuxeo.nuxeo.instance-up.count,0)))),"start
            or stop")
        title: nx/Up and log
        until: now
        vtitle: log per second
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FUp%20and%20log&target=alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.org.apache.log4j.Appender.warn.count)%2C1)%2C%22warnings%22)&target=alias(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.org.apache.log4j.Appender.error.count)%2C1)%2C%22errors%22)&target=alias(drawAsInfinite(absolute(derivative(transformNull(servers.*.nuxeo.nuxeo.instance-up.count%2C0))))%2C%22start%20or%20stop%22)&colorList=orange%2Cred%2Cgreen&vtitle=log%20per%20second&_uniq=0.18648083891648837
-
    -   - alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.repositories.*.documents.create.count)),1),"created")
        - alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.repositories.*.documents.update.count)),1),"updated")
        - alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.repositories.*.documents.delete.count)),1),"deleted")
    -   areaMode: stacked
        from: -1hours
        target:
        - alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.repositories.*.documents.create.count)),1),"created")
        - alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.repositories.*.documents.update.count)),1),"updated")
        - alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.repositories.*.documents.delete.count)),1),"deleted")
        title: nx/Documents all nodes
        until: now
        vtitle: per second
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FDocuments%20all%20nodes&target=alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.repositories.*.documents.create.count))%2C1)%2C%22created%22)&target=alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.repositories.*.documents.update.count))%2C1)%2C%22updated%22)&target=alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.repositories.*.documents.delete.count))%2C1)%2C%22deleted%22)&vtitle=per%20second&areaMode=stacked&_uniq=0.10251493464331785
-
    -   - alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.repositories.*.queries.count.count)),1),"query")
        - alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.repositories.*.saves.count)),1),"save")
    -   from: -1hours
        target:
        - alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.repositories.*.queries.count.count)),1),"query")
        - alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.repositories.*.saves.count)),1),"save")
        title: nx/SessionImpl all nodes
        until: now
        vtitle: per second
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FSessionImpl%20all%20nodes&target=alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.repositories.*.queries.count.count))%2C1)%2C%22query%22)&target=alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.repositories.*.saves.count))%2C1)%2C%22save%22)&vtitle=per%20second&_uniq=0.26833785316514047
-
    -   - alias(servers.monitor1.redis.nuxeo1.memory.internal_view,"used memory")
        - alias(secondYAxis(servers.monitor1.redis.nuxeo1.clients.connected),"connections")
    -   from: -1hours
        lineMode: connected
        target:
        - alias(servers.monitor1.redis.nuxeo1.memory.internal_view,"used memory")
        - alias(secondYAxis(servers.monitor1.redis.nuxeo1.clients.connected),"connections")
        title: nx/Redis
        until: now
        yMinRight: '0'
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FRedis&yMinRight=0&target=alias(servers.monitor1.redis.nuxeo1.memory.internal_view%2C%22used%20memory%22)&target=alias(secondYAxis(servers.monitor1.redis.nuxeo1.clients.connected)%2C%22connections%22)&lineMode=connected&_uniq=0.026411537955249198
-
    -   - alias(perSecond(servers.monitor1.redis.nuxeo1.process.commands_processed),"commands
            per second")
    -   from: -1hours
        lineMode: connected
        target:
        - alias(perSecond(servers.monitor1.redis.nuxeo1.process.commands_processed),"commands
            per second")
        title: nx/Redis commands throughput
        until: now
        yMinRight: '0'
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FRedis%20commands%20throughput&yMinRight=0&target=alias(perSecond(servers.monitor1.redis.nuxeo1.process.commands_processed)%2C%22commands%20per%20second%22)&lineMode=connected&_uniq=0.6949188882590458
-
    -   - alias(maxSeries(servers.monitor1.elasticsearch.*.indices.nuxeo.docs.count),"docs")
        - alias(secondYAxis(maxSeries(servers.monitor1.elasticsearch.*.indices.nuxeo.datastore.size)),"storage")
    -   from: -1hours
        lineMode: connected
        target:
        - alias(maxSeries(servers.monitor1.elasticsearch.*.indices.nuxeo.docs.count),"docs")
        - alias(secondYAxis(maxSeries(servers.monitor1.elasticsearch.*.indices.nuxeo.datastore.size)),"storage")
        title: nx/Elasticsearch documents
        until: now
        yMinRight: '0'
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FElasticsearch%20documents&yMinRight=0&target=alias(maxSeries(servers.monitor1.elasticsearch.*.indices.nuxeo.docs.count)%2C%22docs%22)&target=alias(secondYAxis(maxSeries(servers.monitor1.elasticsearch.*.indices.nuxeo.datastore.size))%2C%22storage%22)&lineMode=connected&_uniq=0.764049289966008
-
    -   - alias(perSecond(maxSeries(servers.monitor1.elasticsearch.*.indices._all.docs.count)),"docs
            per second")
        - alias(secondYAxis(sumSeries(servers.monitor1.elasticsearch.*.segments.count)),"segments")
        - alias(secondYAxis(sumSeries(servers.monitor1.elasticsearch.*.thread_pool.bulk.queue)),"bulk
            queue")
    -   from: -1hours
        lineMode: connected
        target:
        - alias(perSecond(maxSeries(servers.monitor1.elasticsearch.*.indices._all.docs.count)),"docs
            per second")
        - alias(secondYAxis(sumSeries(servers.monitor1.elasticsearch.*.segments.count)),"segments")
        - alias(secondYAxis(sumSeries(servers.monitor1.elasticsearch.*.thread_pool.bulk.queue)),"bulk
            queue")
        title: nx/Elasticsearch index
        until: now
        yMinRight: '0'
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FElasticsearch%20index&yMinRight=0&target=alias(perSecond(maxSeries(servers.monitor1.elasticsearch.*.indices._all.docs.count))%2C%22docs%20per%20second%22)&target=alias(secondYAxis(sumSeries(servers.monitor1.elasticsearch.*.segments.count))%2C%22segments%22)&target=alias(secondYAxis(sumSeries(servers.monitor1.elasticsearch.*.thread_pool.bulk.queue))%2C%22bulk%20queue%22)&lineMode=connected&_uniq=0.396525973278695
-
    -   - alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.search.count)),1),"search")
        - alias(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.search.m1_rate),"1minRate")
        - alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.search.mean)),"mean")
        - alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.search.p95)),"95perc")
    -   colorList: blue,darkblue,orange,red
        from: -1hours
        target:
        - alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.search.count)),1),"search")
        - alias(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.search.m1_rate),"1minRate")
        - alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.search.mean)),"mean")
        - alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.search.p95)),"95perc")
        title: nx/Elasticsearch search all nodes
        until: now
        vtitle: per second
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FElasticsearch%20search%20all%20nodes&target=alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.search.count))%2C1)%2C%22search%22)&target=alias(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.search.m1_rate)%2C%221minRate%22)&target=alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.search.mean))%2C%22mean%22)&target=alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.search.p95))%2C%2295perc%22)&colorList=blue%2Cdarkblue%2Corange%2Cred&vtitle=per%20second&_uniq=0.6519582598090535
-
    -   - alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.index.count)),1),"index")
        - alias(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.index.m1_rate),"1minRate")
        - alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.index.mean)),"mean")
        - alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.index.p95)),"95perc")
    -   colorList: blue,darkblue,orange,red
        from: -1hours
        target:
        - alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.index.count)),1),"index")
        - alias(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.index.m1_rate),"1minRate")
        - alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.index.mean)),"mean")
        - alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.index.p95)),"95perc")
        title: nx/Elasticsearch index
        until: now
        vtitle: per second
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FElasticsearch%20index&target=alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.index.count))%2C1)%2C%22index%22)&target=alias(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.index.m1_rate)%2C%221minRate%22)&target=alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.index.mean))%2C%22mean%22)&target=alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.index.p95))%2C%2295perc%22)&colorList=blue%2Cdarkblue%2Corange%2Cred&vtitle=per%20second&_uniq=0.36317446553713795
-
    -   - alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.count)),1),"bulkIndex")
        - alias(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.m1_rate),"1minRate")
        - alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.mean)),"mean")
        - alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.p95)),"95perc")
    -   colorList: blue,darkblue,orange,red
        from: -1hours
        target:
        - alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.count)),1),"bulkIndex")
        - alias(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.m1_rate),"1minRate")
        - alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.mean)),"mean")
        - alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.p95)),"95perc")
        title: nx/Elasticsearch bulk index
        until: now
        vtitle: per second
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FElasticsearch%20bulk%20index&target=alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.count))%2C1)%2C%22bulkIndex%22)&target=alias(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.m1_rate)%2C%221minRate%22)&target=alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.mean))%2C%22mean%22)&target=alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.bulkIndex.p95))%2C%2295perc%22)&colorList=blue%2Cdarkblue%2Corange%2Cred&vtitle=per%20second&_uniq=0.9865072270317136
-
    -   - alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.count)),1),"delete")
        - alias(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.m1_rate),"1minRate")
        - alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.mean)),"mean")
        - alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.p95)),"95perc")
    -   colorList: blue,darkblue,orange,red
        from: -1hours
        target:
        - alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.count)),1),"delete")
        - alias(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.m1_rate),"1minRate")
        - alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.mean)),"mean")
        - alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.p95)),"95perc")
        title: nx/Elasticsearch delete
        until: now
        vtitle: per second
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FElasticsearch%20delete&target=alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.count))%2C1)%2C%22delete%22)&target=alias(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.m1_rate)%2C%221minRate%22)&target=alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.mean))%2C%22mean%22)&target=alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.delete.p95))%2C%2295perc%22)&colorList=blue%2Cdarkblue%2Corange%2Cred&vtitle=per%20second&_uniq=0.8613328691875829
-
    -   - alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.count)),1),"fetch")
        - alias(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.m1_rate),"1minRate")
        - alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.mean)),"mean")
        - alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.p95)),"95perc")
    -   colorList: blue,darkblue,orange,red
        from: -1hours
        target:
        - alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.count)),1),"fetch")
        - alias(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.m1_rate),"1minRate")
        - alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.mean)),"mean")
        - alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.p95)),"95perc")
        title: nx/Elasticsearch fetch docs
        until: now
        vtitle: per second
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FElasticsearch%20fetch%20docs&target=alias(scaleToSeconds(nonNegativeDerivative(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.count))%2C1)%2C%22fetch%22)&target=alias(sumSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.m1_rate)%2C%221minRate%22)&target=alias(secondYAxis(averageSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.mean))%2C%22mean%22)&target=alias(secondYAxis(maxSeries(servers.*.nuxeo.nuxeo.elasticsearch.service.fetch.p95))%2C%2295perc%22)&colorList=blue%2Cdarkblue%2Corange%2Cred&vtitle=per%20second&_uniq=0.05352037217293537
-
    -   - alias(sumSeries(servers.*.nuxeo.nuxeo.works.*.scheduled.count.count),"scheduled")
        - alias(sumSeries(servers.*.nuxeo.nuxeo.works.*.completed.count),"completed")
    -   from: -1hours
        target:
        - alias(sumSeries(servers.*.nuxeo.nuxeo.works.*.scheduled.count.count),"scheduled")
        - alias(sumSeries(servers.*.nuxeo.nuxeo.works.*.completed.count),"completed")
        title: nx/Workers count total
        until: now
        vtitle: count
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FWorkers%20count%20total&target=alias(sumSeries(servers.*.nuxeo.nuxeo.works.*.scheduled.count.count)%2C%22scheduled%22)&target=alias(sumSeries(servers.*.nuxeo.nuxeo.works.*.completed.count)%2C%22completed%22)&vtitle=count&_uniq=0.4811308963295824
-
    -   - alias(diffSeries(sumSeries(servers.*.nuxeo.nuxeo.works.*.scheduled.count.count),
            sumSeries(servers.*.nuxeo.nuxeo.works.*.completed.count)),"to process")
    -   from: -1hours
        target:
        - alias(diffSeries(sumSeries(servers.*.nuxeo.nuxeo.works.*.scheduled.count.count),
            sumSeries(servers.*.nuxeo.nuxeo.works.*.completed.count)),"to process")
        title: nx/Workers scheduled not completed
        until: now
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FWorkers%20scheduled%20not%20completed&target=alias(diffSeries(sumSeries(servers.*.nuxeo.nuxeo.works.*.scheduled.count.count)%2C%20sumSeries(servers.*.nuxeo.nuxeo.works.*.completed.count))%2C%22to%20process%22)&_uniq=0.09528287553938952
-
    -   - mostDeviant(6,aliasByNode(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.works.*.scheduled.count.count),1),1,5))
    -   from: -1hours
        target:
        - mostDeviant(6,aliasByNode(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.works.*.scheduled.count.count),1),1,5))
        title: nx/Workers deviant scheduled throughtput
        until: now
        vtitle: per second
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FWorkers%20deviant%20scheduled%20throughtput&target=mostDeviant(6%2CaliasByNode(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.works.*.scheduled.count.count)%2C1)%2C1%2C5))&vtitle=per%20second&_uniq=0.09933616243719778
-
    -   - mostDeviant(6,aliasByNode(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.works.*.completed.count),1),1,5))
    -   from: -1hours
        target:
        - mostDeviant(6,aliasByNode(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.works.*.completed.count),1),1,5))
        title: nx/Workers deviant completed throughtput
        until: now
        vtitle: per second
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FWorkers%20deviant%20completed%20throughtput&target=mostDeviant(6%2CaliasByNode(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.works.*.completed.count)%2C1)%2C1%2C5))&vtitle=per%20second&_uniq=0.18479380447406613
-
    -   - mostDeviant(6,aliasByNode(servers.*.nuxeo.nuxeo.works.*.completed.count,1,5))
    -   from: -1hours
        target:
        - mostDeviant(6,aliasByNode(servers.*.nuxeo.nuxeo.works.*.completed.count,1,5))
        title: nx/Workers deviant completed count
        until: now
        vtitle: count
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FWorkers%20deviant%20completed%20count&target=mostDeviant(6%2CaliasByNode(servers.*.nuxeo.nuxeo.works.*.completed.count%2C1%2C5))&vtitle=count&_uniq=0.45227135631075266
-
    -   - aliasByNode(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.audit.drained.count),1),1,5)
        - aliasByNode(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.audit.scheduled.count),1),1,5)
        - alias(secondYAxis(diffSeries(sumSeries(servers.*.nuxeo.nuxeo.audit.queued.count),
            sumSeries(servers.*.nuxeo.nuxeo.audit.drained.count))),"queue size")
    -   from: -1hours
        target:
        - aliasByNode(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.audit.drained.count),1),1,5)
        - aliasByNode(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.audit.scheduled.count),1),1,5)
        - alias(secondYAxis(diffSeries(sumSeries(servers.*.nuxeo.nuxeo.audit.queued.count),
            sumSeries(servers.*.nuxeo.nuxeo.audit.drained.count))),"queue size")
        title: nx/Audit throughput
        until: now
        vtitle: count
    - /render?width=500&from=-1hours&until=now&height=400&title=nx%2FAudit%20throughput&target=aliasByNode(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.audit.drained.count)%2C1)%2C1%2C5)&target=aliasByNode(scaleToSeconds(nonNegativeDerivative(servers.*.nuxeo.nuxeo.audit.scheduled.count)%2C1)%2C1%2C5)&target=alias(secondYAxis(diffSeries(sumSeries(servers.*.nuxeo.nuxeo.audit.queued.count)%2C%20sumSeries(servers.*.nuxeo.nuxeo.audit.drained.count)))%2C%22queue%20size%22)&vtitle=count&_uniq=0.5497301964406537
name: nuxeo-bench
refreshConfig:
    enabled: true
    interval: 60000
timeConfig:
    endDate: NaN-NaN-NaNTNaN:NaN:NaN
    relativeStartQuantity: '1'
    relativeStartUnits: hours
    relativeUntilQuantity: ''
    relativeUntilUnits: now
    startDate: NaN-NaN-NaNTNaN:NaN:NaN
    type: relative
