---

- name: Get number of shard
  shell: echo "$(( {{counts.elastic}} * 3))"
  register: es_shard

# setup nuxeo conf, enabling elasticsearch
- name: Config - Enable elastic
  lineinfile:
    dest: /opt/nuxeo/conf/nuxeo.conf
    regexp: '^#?elasticsearch.enabled\s*(.*)'
    line: "elasticsearch.enabled=true"
- name: Config - clustername
  lineinfile:
    dest: /opt/nuxeo/conf/nuxeo.conf
    regexp: '^#?elasticsearch.clusterName\s*(.*)'
    line: "elasticsearch.clusterName=b10b"
- name: Config - replicas
  lineinfile:
    dest: /opt/nuxeo/conf/nuxeo.conf
    regexp: '^#?elasticsearch.indexNumberOfReplicas\s*(.*)'
    line: "elasticsearch.indexNumberOfReplicas=0"
- name: Config - shards
  lineinfile:
    dest: /opt/nuxeo/conf/nuxeo.conf
    regexp: '^#?elasticsearch.indexNumberOfShards\s*(.*)'
    line: "elasticsearch.indexNumberOfShards={{es_shard.stdout}}"
- name: Config - bucket read
  lineinfile:
    dest: /opt/nuxeo/conf/nuxeo.conf
    regexp: '^#?elasticsearch.reindex.bucketReadSize\s*(.*)'
    line: "elasticsearch.reindex.bucketReadSize=100000"
- name: Config - bucket write
  lineinfile:
    dest: /opt/nuxeo/conf/nuxeo.conf
    regexp: '^#?elasticsearch.reindex.bucketWriteSize\s*(.*)'
    line: "elasticsearch.reindex.bucketWriteSize=2500"
- name: Config - threads
  lineinfile:
    dest: /opt/nuxeo/conf/nuxeo.conf
    regexp: '^#?elasticsearch.indexing.maxThreads\s*(.*)'
    line: "elasticsearch.indexing.maxThreads=40"
- name: Config - cluster info
  lineinfile:
    dest: /opt/nuxeo/conf/nuxeo.conf
    regexp: '^#?elasticsearch.adminCenter.displayClusterInfo\s*(.*)'
    line: "elasticsearch.adminCenter.displayClusterInfo=true"
- name: Config - addressList
  lineinfile:
    dest: /opt/nuxeo/conf/nuxeo.conf
    regexp: '^#?elasticsearch\.addressList\s*='
    line: "elasticsearch.addressList={% for host in groups['elastic'] -%}{{ hostvars[host]['private_ip'] }}:9300{%- if not loop.last %},{% endif -%}{%- endfor %}"
    # line: "elasticsearch.addressList={{ elastic_hosts | map('regex_replace', '^(.*)$', '\\\\1:9300') | join(',') }}"
- name: Config - Enable elastic audit
  lineinfile:
    dest: /opt/nuxeo/conf/nuxeo.conf
    regexp: '^#?audit.elasticsearch.enabled=\s*(.*)'
    line: "audit.elasticsearch.enabled=true"
- name: Config - Enable Redis
  lineinfile:
    dest: /opt/nuxeo/conf/nuxeo.conf
    regexp: '^#?nuxeo.redis.enabled\s*(.*)'
    line: "nuxeo.redis.enabled=true"
- name: Config - Set Redis host
  lineinfile:
    dest: /opt/nuxeo/conf/nuxeo.conf
    regexp: '^#?nuxeo.redis.host\s*(.*)'
    line: "nuxeo.redis.host=nuxeo1"
- name: Calculate heap size 50%, let more memory to redis
  shell: echo $(( $(grep MemTotal /proc/meminfo | awk '{print $2}') / 2 / 1024 ))
  register: heapsize
- name: Config - heap size
  lineinfile:
    dest: /opt/nuxeo/conf/nuxeo.conf
    regexp: 'JAVA_OPTS\s*=(.*)-Xms[^m]+m(.*)-Xmx[^m]+m(.*)'
    line: 'JAVA_OPTS=\1-Xms{{heapsize.stdout.strip()}}m\2-Xmx{{heapsize.stdout.strip()}}m\3'
    backrefs: yes


- name: Remove contrib that disable es
  file: path=/opt/nuxeo/server/templates/b10b/nxserver/config/disable-es-config.xml state=absent

- name: Setup an Elasticsearch configuration
  copy: src=elasticsearch-b10b-config.xml.nxftl dest=/opt/nuxeo/server/templates/b10b/nxserver/config/elasticsearch-b10b-config.xml.nxftl owner=nuxeo

- name: Install Redis
  apt: name=redis-server state=latest
  sudo: yes

- name: Redis bind
  sudo: yes
  lineinfile:
    dest: /etc/redis/redis.conf
    regexp: '^#?bind\s*(.*)'
    line: "bind {{ private_ip }}"

- name: Redis in memory
  sudo: yes
  lineinfile:
    dest: /etc/redis/redis.conf
    regexp: '^save'
    state: absent

- name: Restart Redis
  sudo: yes
  service: name=redis-server state=restarted

- name: Restore pristine bundles
  shell: cp -a /opt/nuxeo/server/nxserver/bundles.pristine/*.jar /opt/nuxeo/server/nxserver/bundles/

